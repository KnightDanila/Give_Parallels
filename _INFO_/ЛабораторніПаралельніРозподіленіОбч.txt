Завдання для лабораторних робіт 

Завдання №1  Використання OpenMP 
 
• Напишіть програму на мові C для обчислення скалярного добутку двох векторів типу double. 
Розмір векторів виберіть таким чином, щоб вони займали половину оперативної памяті. 
• Модифікуйте даний алгоритм з допомогою прагм OpenMP і виконайте програму з використанням різної кількості нитей. 
• Обчисліть час виконання і проаналізуйте отримані результати. 

Завдання №2  Налаштування MPI API в ОС Windows 
 
• Встановіть MPICH останньої версії, який можна загрузити з сайту http://www.mcs.anl.gov/research/projects/mpich2/ 
• Вивчіть правила виклику програми mpiexec 
• Відкомпілюйте і виконайте тестову програму pi.c з різною кількість процесів на одному компютері.
• Опишіть процес перевірки встановленого програмного забезпечення.  
 
Завдання №3  Написання простих програм MPI 
 
• Напишіть програму на мові C, яка визначить кількість процесів, які виконуються, та імена компютерів, на яких вони виконуються.
 • Обчислити обєм доступної памяті кожного процесу. • Перевірити, чи можна ввести дані з зовнішнього файлу, розташованому на мережному драйві.  
 
Завдання №4  Передача повідомлень між процесами MPI 
 
• Напишіть проrраму на мові С, яка буде виконуватись двома процесами. 
• Організуйте передачу одновимірного масиву з нульового процесу до першого. 
• Обчисліть суму всіх елементів масиву і розішліть її всім процесам. 
• Організуйте видачу результату на нульовому процесі.
 • Використати фунціх MPI_Send та MPI_Recv.  
 
Завдання №5  Робота з матрицями  
 
• Напишіть програму на мові С, яка буде зберігати квадратну матрицю на M процесах. Розмір матриці N обчисліть таким чином, щоб кожний процес зберігав 
K рядків матриці і N = k*M, де M - число запущених процесів. 
• Напишіть підпрограми для перемноження матриці на вектор і навпаки. Результуючий вектор розішліть на всі процеси.
 • Обчисліть час виконання даних процедур. Упевніться, що він буде приблизно однаковий для обох випадків.  
 
 
Завдання №6  Колективні операції 
 
• Організуйте розсилку інформації від одного процесса всім остальным членам деякої області зв'язку (MPI_Bcast). 
 93
• Зберіть (MPI_Gather) розподілені по процессам массиви в один массив зі збереженням його в адресном просторі виділеного (root) процесса (MPI_Gather).
 • Проведіть глобальні обчислювальні операції (sum, min, max и min) над даними, які розташовані в адресних просторах різних процесів:
 зі збереженням результата в адресном просторі одного процесса (MPI_Reduce); 
• Організуйте видачу відповідних результатів на нульовому процесі.  
